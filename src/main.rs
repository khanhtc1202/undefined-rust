//mod print;
//mod vars;
//mod types;
//mod strings;
//mod tuples;
//mod arrays;
//mod vectors;
//mod conditions;
//mod loops;
//mod functions;
//mod pointer_ref;
//mod structs;
//mod enums;
//mod cli;
//mod borrow_move;
//mod options;
//mod module;
//mod hashmap;
//mod error;
//mod generic;
//mod traits;
//mod lifetime;
//mod closure;
//mod iterator;
//mod smart_pointer;
//mod concurrent;
//mod channels;
mod mutexs;
//mod polymorphism;
//mod state_pattern;
//mod state_pattern_1;
//mod matches;
//mod pattern;
//mod advance_unsafe;
//mod advance_trait;
//mod advance_type;
//mod advance_func;
//mod advance_marco;

fn main() {
//    print::run();
//    vars::run();
//    types:: run();
//    strings::run();
//    tuples::run();
//    arrays::run();
//    vectors::run();
//    conditions::run();
//    loops::run();
//    functions::run();
//    pointer_ref::run();
//    structs::run();
//    enums::run();
//    cli::run();
//    borrow_move::run();
//    options::run();
//    module::run();
//    hashmap::run();
//    error::run();
//    generic::run();
//    traits::run();
//    lifetime::run();
//    closure::run();
//    iterator::run();
//    smart_pointer::run();
//    concurrent::run();
//    channels::run();
    mutexs::run();
//    polymorphism::run();
//    state_pattern::run();
//    state_pattern_1::run();
//    matches::run();
//    pattern::run();
//    advance_unsafe::run();
//    advance_trait::run();
//    advance_type::run();
//    advance_func::run();
//    advance_marco::run();
}
